generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model guests {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  active    Boolean   @default(true)
  archive   Boolean   @default(false)
  creatorId String?   @db.ObjectId
  matricule String
  password  String
  username  String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  roles     String[]  @db.ObjectId

  Role         Role[]      @relation(fields: [roles], references: [id])
  creator      guests?     @relation("guestCreator", fields: [creatorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  guests       guests[]    @relation("guestCreator")
}

model Role {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  code          String
  permissionIDs String[] @db.ObjectId
  guestIDs    String[] @db.ObjectId

  permissions Permission[] @relation(fields: [permissionIDs], references: [id])
  accounts    guests[]     @relation(fields: [guestIDs], references: [id])

  @@map("guest_roles")
}

model Permission {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  accessLevel access[] @default([READ])
  description String?
  
  roleIDs     String[] @db.ObjectId
  roles    Role[]   @relation(fields: [roleIDs], references: [id])
  @@map("guest_permissions")
}

enum access {
  READ
  WRITE
  DELETE
  UPDATE
}