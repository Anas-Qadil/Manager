generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model guests {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  active    Boolean  @default(true)
  archive   Boolean  @default(false)
  creatorId String?  @db.ObjectId
  matricule String
  password  String
  username  String   @unique
  roles     String[] @db.ObjectId

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  Role    Roles[]  @relation(fields: [roles], references: [id])
  creator guests?  @relation("guestCreator", fields: [creatorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  guests  guests[] @relation("guestCreator")
}

model Roles {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  code          String
  permissionIDs String[] @db.ObjectId
  guestIDs      String[] @db.ObjectId

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  Permissions Permissions[] @relation(fields: [permissionIDs], references: [id])
  guests      guests[]      @relation(fields: [guestIDs], references: [id])

  @@map("guest_roles")
}

model Permissions {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  accessLevel access[] @default([READ])
  description String?
  archive     Boolean  @default(false)

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  roleIDs   String[]  @db.ObjectId
  roles     Roles[]   @relation(fields: [roleIDs], references: [id])

  @@map("guest_permissions")
}

enum access {
  READ
  WRITE
  DELETE
  UPDATE
}
